# coding: utf-8

"""
    Nozomi API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class UpdateRequestPropertyInputModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'guid': 'str',
        'type': 'RequestPropertyType',
        'key': 'str',
        'value': 'str',
        'is_enabled': 'bool',
        'request_guid': 'str',
        'is_deleted': 'bool',
        'permanent_deletion': 'bool'
    }

    attribute_map = {
        'guid': 'guid',
        'type': 'type',
        'key': 'key',
        'value': 'value',
        'is_enabled': 'isEnabled',
        'request_guid': 'requestGuid',
        'is_deleted': 'isDeleted',
        'permanent_deletion': 'permanentDeletion'
    }

    def __init__(self, guid=None, type=None, key=None, value=None, is_enabled=None, request_guid=None, is_deleted=None, permanent_deletion=None):  # noqa: E501
        """UpdateRequestPropertyInputModel - a model defined in Swagger"""  # noqa: E501
        self._guid = None
        self._type = None
        self._key = None
        self._value = None
        self._is_enabled = None
        self._request_guid = None
        self._is_deleted = None
        self._permanent_deletion = None
        self.discriminator = None
        if guid is not None:
            self.guid = guid
        if type is not None:
            self.type = type
        if key is not None:
            self.key = key
        if value is not None:
            self.value = value
        if is_enabled is not None:
            self.is_enabled = is_enabled
        if request_guid is not None:
            self.request_guid = request_guid
        if is_deleted is not None:
            self.is_deleted = is_deleted
        if permanent_deletion is not None:
            self.permanent_deletion = permanent_deletion

    @property
    def guid(self):
        """Gets the guid of this UpdateRequestPropertyInputModel.  # noqa: E501


        :return: The guid of this UpdateRequestPropertyInputModel.  # noqa: E501
        :rtype: str
        """
        return self._guid

    @guid.setter
    def guid(self, guid):
        """Sets the guid of this UpdateRequestPropertyInputModel.


        :param guid: The guid of this UpdateRequestPropertyInputModel.  # noqa: E501
        :type: str
        """

        self._guid = guid

    @property
    def type(self):
        """Gets the type of this UpdateRequestPropertyInputModel.  # noqa: E501


        :return: The type of this UpdateRequestPropertyInputModel.  # noqa: E501
        :rtype: RequestPropertyType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UpdateRequestPropertyInputModel.


        :param type: The type of this UpdateRequestPropertyInputModel.  # noqa: E501
        :type: RequestPropertyType
        """

        self._type = type

    @property
    def key(self):
        """Gets the key of this UpdateRequestPropertyInputModel.  # noqa: E501


        :return: The key of this UpdateRequestPropertyInputModel.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this UpdateRequestPropertyInputModel.


        :param key: The key of this UpdateRequestPropertyInputModel.  # noqa: E501
        :type: str
        """

        self._key = key

    @property
    def value(self):
        """Gets the value of this UpdateRequestPropertyInputModel.  # noqa: E501


        :return: The value of this UpdateRequestPropertyInputModel.  # noqa: E501
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this UpdateRequestPropertyInputModel.


        :param value: The value of this UpdateRequestPropertyInputModel.  # noqa: E501
        :type: str
        """

        self._value = value

    @property
    def is_enabled(self):
        """Gets the is_enabled of this UpdateRequestPropertyInputModel.  # noqa: E501


        :return: The is_enabled of this UpdateRequestPropertyInputModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_enabled

    @is_enabled.setter
    def is_enabled(self, is_enabled):
        """Sets the is_enabled of this UpdateRequestPropertyInputModel.


        :param is_enabled: The is_enabled of this UpdateRequestPropertyInputModel.  # noqa: E501
        :type: bool
        """

        self._is_enabled = is_enabled

    @property
    def request_guid(self):
        """Gets the request_guid of this UpdateRequestPropertyInputModel.  # noqa: E501


        :return: The request_guid of this UpdateRequestPropertyInputModel.  # noqa: E501
        :rtype: str
        """
        return self._request_guid

    @request_guid.setter
    def request_guid(self, request_guid):
        """Sets the request_guid of this UpdateRequestPropertyInputModel.


        :param request_guid: The request_guid of this UpdateRequestPropertyInputModel.  # noqa: E501
        :type: str
        """

        self._request_guid = request_guid

    @property
    def is_deleted(self):
        """Gets the is_deleted of this UpdateRequestPropertyInputModel.  # noqa: E501


        :return: The is_deleted of this UpdateRequestPropertyInputModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted):
        """Sets the is_deleted of this UpdateRequestPropertyInputModel.


        :param is_deleted: The is_deleted of this UpdateRequestPropertyInputModel.  # noqa: E501
        :type: bool
        """

        self._is_deleted = is_deleted

    @property
    def permanent_deletion(self):
        """Gets the permanent_deletion of this UpdateRequestPropertyInputModel.  # noqa: E501


        :return: The permanent_deletion of this UpdateRequestPropertyInputModel.  # noqa: E501
        :rtype: bool
        """
        return self._permanent_deletion

    @permanent_deletion.setter
    def permanent_deletion(self, permanent_deletion):
        """Sets the permanent_deletion of this UpdateRequestPropertyInputModel.


        :param permanent_deletion: The permanent_deletion of this UpdateRequestPropertyInputModel.  # noqa: E501
        :type: bool
        """

        self._permanent_deletion = permanent_deletion

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(UpdateRequestPropertyInputModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UpdateRequestPropertyInputModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
